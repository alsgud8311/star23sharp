/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as MainImport } from './routes/main'

// Create Virtual Routes

const SignupLazyImport = createFileRoute('/signup')()
const MenuLazyImport = createFileRoute('/menu')()
const LoginLazyImport = createFileRoute('/login')()
const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()
const MessagesIndexLazyImport = createFileRoute('/messages/')()

// Create/Update Routes

const SignupLazyRoute = SignupLazyImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/signup.lazy').then((d) => d.Route))

const MenuLazyRoute = MenuLazyImport.update({
  id: '/menu',
  path: '/menu',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/menu.lazy').then((d) => d.Route))

const LoginLazyRoute = LoginLazyImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const AboutLazyRoute = AboutLazyImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const MainRoute = MainImport.update({
  id: '/main',
  path: '/main',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const MessagesIndexLazyRoute = MessagesIndexLazyImport.update({
  id: '/messages/',
  path: '/messages/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/messages/index.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/main': {
      id: '/main'
      path: '/main'
      fullPath: '/main'
      preLoaderRoute: typeof MainImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/menu': {
      id: '/menu'
      path: '/menu'
      fullPath: '/menu'
      preLoaderRoute: typeof MenuLazyImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupLazyImport
      parentRoute: typeof rootRoute
    }
    '/messages/': {
      id: '/messages/'
      path: '/messages'
      fullPath: '/messages'
      preLoaderRoute: typeof MessagesIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/main': typeof MainRoute
  '/about': typeof AboutLazyRoute
  '/login': typeof LoginLazyRoute
  '/menu': typeof MenuLazyRoute
  '/signup': typeof SignupLazyRoute
  '/messages': typeof MessagesIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/main': typeof MainRoute
  '/about': typeof AboutLazyRoute
  '/login': typeof LoginLazyRoute
  '/menu': typeof MenuLazyRoute
  '/signup': typeof SignupLazyRoute
  '/messages': typeof MessagesIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/main': typeof MainRoute
  '/about': typeof AboutLazyRoute
  '/login': typeof LoginLazyRoute
  '/menu': typeof MenuLazyRoute
  '/signup': typeof SignupLazyRoute
  '/messages/': typeof MessagesIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/main'
    | '/about'
    | '/login'
    | '/menu'
    | '/signup'
    | '/messages'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/main' | '/about' | '/login' | '/menu' | '/signup' | '/messages'
  id:
    | '__root__'
    | '/'
    | '/main'
    | '/about'
    | '/login'
    | '/menu'
    | '/signup'
    | '/messages/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  MainRoute: typeof MainRoute
  AboutLazyRoute: typeof AboutLazyRoute
  LoginLazyRoute: typeof LoginLazyRoute
  MenuLazyRoute: typeof MenuLazyRoute
  SignupLazyRoute: typeof SignupLazyRoute
  MessagesIndexLazyRoute: typeof MessagesIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  MainRoute: MainRoute,
  AboutLazyRoute: AboutLazyRoute,
  LoginLazyRoute: LoginLazyRoute,
  MenuLazyRoute: MenuLazyRoute,
  SignupLazyRoute: SignupLazyRoute,
  MessagesIndexLazyRoute: MessagesIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/main",
        "/about",
        "/login",
        "/menu",
        "/signup",
        "/messages/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/main": {
      "filePath": "main.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/login": {
      "filePath": "login.lazy.tsx"
    },
    "/menu": {
      "filePath": "menu.lazy.tsx"
    },
    "/signup": {
      "filePath": "signup.lazy.tsx"
    },
    "/messages/": {
      "filePath": "messages/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
