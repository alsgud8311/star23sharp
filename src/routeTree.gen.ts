/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from "@tanstack/react-router";

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as IndexImport } from "./routes/index";
import { Route as MessagesMessageIdIndexImport } from "./routes/messages/$messageId/index";
import { Route as MessagesSendReceiverIdImport } from "./routes/messages/send/$receiverId";

// Create Virtual Routes

const CreateLazyImport = createFileRoute("/create")();
const MessagesIndexLazyImport = createFileRoute("/messages/")();

// Create/Update Routes

const CreateLazyRoute = CreateLazyImport.update({
  id: "/create",
  path: "/create",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/create.lazy").then((d) => d.Route));

const IndexRoute = IndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRoute,
} as any);

const MessagesIndexLazyRoute = MessagesIndexLazyImport.update({
  id: "/messages/",
  path: "/messages/",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/messages").then((d) => d.Route));

const MessagesMessageIdIndexRoute = MessagesMessageIdIndexImport.update({
  id: "/messages/$messageId/",
  path: "/messages/$messageId/",
  getParentRoute: () => rootRoute,
} as any);

const MessagesSendReceiverIdRoute = MessagesSendReceiverIdImport.update({
  id: "/messages/send/$receiverId",
  path: "/messages/send/$receiverId",
  getParentRoute: () => rootRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    "/create": {
      id: "/create";
      path: "/create";
      fullPath: "/create";
      preLoaderRoute: typeof CreateLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/messages/": {
      id: "/messages/";
      path: "/messages";
      fullPath: "/messages";
      preLoaderRoute: typeof MessagesIndexLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/messages/send/$receiverId": {
      id: "/messages/send/$receiverId";
      path: "/messages/send/$receiverId";
      fullPath: "/messages/send/$receiverId";
      preLoaderRoute: typeof MessagesSendReceiverIdImport;
      parentRoute: typeof rootRoute;
    };
    "/messages/$messageId/": {
      id: "/messages/$messageId/";
      path: "/messages/$messageId";
      fullPath: "/messages/$messageId";
      preLoaderRoute: typeof MessagesMessageIdIndexImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute;
  "/create": typeof CreateLazyRoute;
  "/messages": typeof MessagesIndexLazyRoute;
  "/messages/send/$receiverId": typeof MessagesSendReceiverIdRoute;
  "/messages/$messageId": typeof MessagesMessageIdIndexRoute;
}

export interface FileRoutesByTo {
  "/": typeof IndexRoute;
  "/create": typeof CreateLazyRoute;
  "/messages": typeof MessagesIndexLazyRoute;
  "/messages/send/$receiverId": typeof MessagesSendReceiverIdRoute;
  "/messages/$messageId": typeof MessagesMessageIdIndexRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  "/": typeof IndexRoute;
  "/create": typeof CreateLazyRoute;
  "/messages/": typeof MessagesIndexLazyRoute;
  "/messages/send/$receiverId": typeof MessagesSendReceiverIdRoute;
  "/messages/$messageId/": typeof MessagesMessageIdIndexRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | "/"
    | "/create"
    | "/messages"
    | "/messages/send/$receiverId"
    | "/messages/$messageId";
  fileRoutesByTo: FileRoutesByTo;
  to:
    | "/"
    | "/create"
    | "/messages"
    | "/messages/send/$receiverId"
    | "/messages/$messageId";
  id:
    | "__root__"
    | "/"
    | "/create"
    | "/messages/"
    | "/messages/send/$receiverId"
    | "/messages/$messageId/";
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  CreateLazyRoute: typeof CreateLazyRoute;
  MessagesIndexLazyRoute: typeof MessagesIndexLazyRoute;
  MessagesSendReceiverIdRoute: typeof MessagesSendReceiverIdRoute;
  MessagesMessageIdIndexRoute: typeof MessagesMessageIdIndexRoute;
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CreateLazyRoute: CreateLazyRoute,
  MessagesIndexLazyRoute: MessagesIndexLazyRoute,
  MessagesSendReceiverIdRoute: MessagesSendReceiverIdRoute,
  MessagesMessageIdIndexRoute: MessagesMessageIdIndexRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/create",
        "/messages/",
        "/messages/send/$receiverId",
        "/messages/$messageId/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/create": {
      "filePath": "create.lazy.tsx"
    },
    "/messages/": {
      "filePath": "messages/index.lazy.tsx"
    },
    "/messages/send/$receiverId": {
      "filePath": "messages/send/$receiverId.tsx"
    },
    "/messages/$messageId/": {
      "filePath": "messages/$messageId/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
